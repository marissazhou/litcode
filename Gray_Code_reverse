# author: marissazhou
# date: 31/08/2014
# idea: dfs
# size should be 1<<n or 2^i, ith should be (i>>1)^i

class Solution:
    # @return a list of integers
    def grayCode(self, n):
        if n<1:
            return [0]
        if n==1:
            return [0,1]
        result = []
        cur_result = [0,1]
        i = 2
        while i<n+1:
            highbit = 1 << i-1
            steps = 1 << i-1
            result = cur_result
            lent = len(cur_result)
            for j in xrange(0, steps):
                result.append(highbit + cur_result[lent-1-j])
            cur_result = result
            i = i+1
        return result
