public class Solution {
    public int maxProfit(int[] prices) {
        if (prices==null || prices.length==0) return 0;
        
        int[] left = new int[prices.length];
        int[] right = new int[prices.length];
        
        left[0] = 0;
        int min = prices[0];
        for (int i=1; i<prices.length-1;i++){
            min = Math.min(min, prices[i]);
            left[i] = Math.max(prices[i]-min, left[i-1]);
        }
        right[prices.length-1] = 0;
        int max = prices[prices.length-1];
        for (int i=prices.length-2; i>-1;i--){
            max = Math.max(max, prices[i]);
            right[i] = Math.max(max-prices[i], right[i+1]);
        }
        int p = 0;
        for (int i=0; i<prices.length-1;i++){
            if (left[i]+right[i]>p) p=left[i]+right[i];
        }
        return p;
    }
}
