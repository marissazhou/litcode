/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; next = null; }
 * }
 */
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    ListNode cur = null;
    
    public TreeNode sortedListToBST(ListNode head) {
        if (head == null) return null;
        
        cur = head;
        int size = getListLen(head);
        return sortedListToBSTHelper(size);
    }
    
    public TreeNode sortedListToBSTHelper(int size){
        if (size<=0) return null;
        TreeNode left = sortedListToBSTHelper(size/2);
        TreeNode root = new TreeNode(cur.val);
        cur = cur.next;
        TreeNode right = sortedListToBSTHelper(size-1-size/2);
        root.left = left;
        root.right = right;
        return root;
    }
    
    private int getListLen(ListNode head){
        if (head == null) return 0;
        int len = 0;
        while(head != null){
            len++;
            head = head.next;
        }
        return len;
    }
}
