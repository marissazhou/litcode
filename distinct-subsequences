/* 
  如果最后的字符不相同，长度为j的子串在长度为i的母串中出现的次数为长度为j的子串在长度为i-1的母串中出现的次数。
  如果最后的字符相同，长度为j的子串在长度为i的母串中出现的次数加上长度为j-1的子串在长度为i-1的母串中出现的次数。
*/
public class Solution {
    public int numDistinct(String S, String T) {
        if (S==null || T==null || S.length()==0 || T.length()==0 || S.length() < T.length()) return 0;
        
        int[][] nums = new int[S.length()+1][T.length()+1];
        for (int i=0; i<=S.length(); i++) nums[i][0]=1;
        
        for (int i=1; i<=S.length(); i++){ 
            for (int j=1; j<=T.length(); j++){
                nums[i][j] = nums[i-1][j];
                if (S.charAt(i-1)==T.charAt(j-1)) nums[i][j] += nums[i-1][j-1];
            }
        }
        return nums[S.length()][T.length()];
    }
}
