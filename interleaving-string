public class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if (s1==null || s2==null || s3==null) return false;
        if (s1.length()+s2.length()!=s3.length()) return false;
        return helper(s1, s2, s3);
    }
    private boolean helper(String s1, String s2, String s3){
        if (s1.length()==0) {
            if (s2 == s3) return true;
            else return false;
        }
        if (s2.length()==0) {
            if (s1 == s3) return true;
            else return false;
        }
        if (s3.charAt(0)!=s1.charAt(0) && s3.charAt(0)!=s2.charAt(0)) return false;
        boolean a = helper(s1.substring(1), s2, s3.substring(1));
        boolean b = helper(s1, s2.substring(1), s3.substring(1));
        if (s3.charAt(0)==s1.charAt(0) && s3.charAt(0)!=s2.charAt(0)) return a;
        else if (s3.charAt(0)==s2.charAt(0) && s3.charAt(0)!=s1.charAt(0)) return b;
        else return a || b;
    }
}


/*
    DP
*/

public class Solution {
    public boolean isInterleave(String s1, String s2, String s3) {
        if (s1==null || s2==null || s3==null) return false;
        if (s1.length()+s2.length()!=s3.length()) return false;
        if (s1.length()+s2.length()!=s3.length()) return false;
        if (s1.length() == 0){
            if (s2.equals(s3)) return true;
            else return false;
        } 
        if (s2.length() == 0){
            if (s1.equals(s3)) return true;
            else return false;
        } 
        
        int m = s1.length();
        int n = s2.length();
        
        boolean[][] checked = new boolean[m+1][n+1];
        
        checked[0][0]=true;
        for (int i=1; i<=m; i++){
            if (s3.charAt(i-1) == s1.charAt(i-1))
                checked[i][0] = true;
            else checked[i][0] = false;
        }
        for (int i=1; i<=n; i++){
            if (s3.charAt(i-1) == s2.charAt(i-1))
                checked[0][i] = true;
            else checked[0][i] = false;
        }
        
        for (int i=1; i<=m; i++){
            for (int j=1; j<=n; j++){
                checked[i][j] = false;
                if (s3.charAt(i+j-1) == s1.charAt(i-1) && s3.charAt(i+j-1) != s2.charAt(j-1)){
                    checked[i][j] = checked[i-1][j];
                }
                else if (s3.charAt(i+j-1) != s1.charAt(i-1) && s3.charAt(i+j-1) == s2.charAt(j-1)){
                    checked[i][j] = checked[i][j-1];
                }
                else if (s3.charAt(i+j-1) == s1.charAt(i-1) && s3.charAt(i+j-1) == s2.charAt(j-1)){
                    checked[i][j] = checked[i-1][j] || checked[i][j-1];
                }
            }
        }
        return checked[m][n];
    }
}
