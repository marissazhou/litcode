/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        if (intervals == null || intervals.size() == 0){
            return intervals;
        }
        Collections.sort(intervals, new IntervalComparator());
        for (int i=1; i<intervals.size(); i++){
            if (intervals.get(i).start <= intervals.get(i-1).end){
                intervals.get(i).start = intervals.get(i-1).start;
                intervals.get(i).end = Math.max(intervals.get(i-1).end, intervals.get(i).end);
                intervals.remove(i-1);
                i--;
            }
        }
        return intervals;
    }
    private class IntervalComparator implements Comparator<Interval>{
        public int compare(Interval a, Interval b){
            return a.start - b.start;
        }
    }
}
