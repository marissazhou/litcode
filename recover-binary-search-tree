/**
 * author: Lijuan Marissa Zhou
 * idea: in-order traverse
 */
 
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    private TreeNode n1 = null;
    private TreeNode n2 = null;
    private TreeNode pre = new TreeNode(Integer.MIN_VALUE); 
    
    public void recoverTree(TreeNode root) {
        traverse(root);
        if (n1!=null && n2!=null){
            int temp = n1.val;
            n1.val = n2.val;
            n2.val = temp;
        }
    }
    public void traverse(TreeNode root) {
        if (root == null) return;
        traverse(root.left);
        if (n1 == null && root.val < pre.val){
            n1 = pre;
        }
        if (n1 != null && root.val < pre.val){
            n2 = root;
        }
        pre = root;
        traverse(root.right);
    }
}
