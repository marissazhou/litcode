/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode sortList(ListNode head) {
        if (head == null || head.next == null) return head;
        
        int count = 0;
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode pre = dummy;
        ListNode h1 = head;
        ListNode h2 = head;
        ListNode p1 = head;
        ListNode p2 = head;
        while(p1 != null){
            count++; p1 = p1.next;
        }
        p1 = head;
        for (int interval=1; interval<=count; interval=interval*2){
            while(p1!=null){
                h1 = p1;
                for (int i=0;i<interval-1;i++){
                    if(p1 == null) break;
                    p1 = p1.next;
                }
                if (p1 == null) h2=null;
                else{
                    h2 = p1.next;
                    p2 = h2;
                    p1.next = null;
                    for (int i=0;i<interval-1;i++){
                        if(p2 == null) break;
                        p2 = p2.next;
                    }
                    if (p2 != null) { p1 = p2.next; p2.next=null; }
                    else{ p1 = null; }
                }
                if(pre!=null){
                    pre.next = merge(h1,h2);
                    for(int i=0; (i<interval*2)&&(pre!=null);i++) pre = pre.next;
                    if(pre!=null) pre.next = p1;
                }
            }
            p1 = dummy.next;
            pre = dummy;
        }
        return dummy.next;
    }
    
    public ListNode merge(ListNode h1, ListNode h2) {
        if (h1 == null) return h2;
        
        ListNode dummy = new ListNode(0);
        dummy.next = h1;
        ListNode p = dummy;
        
        while(h2!=null){
            if (p.next == null) { p.next = h2; break; }
            if (p.next.val<=h2.val) { p=p.next; continue; }
            else { 
                ListNode tmp = h2.next;
                h2.next = p.next;
                p.next = h2;
                p = h2;
                h2 = tmp;
            }
        }
        return dummy.next;
    }
}
